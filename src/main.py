from DirectoryManager import DirectoryManager
from DataBaseManager import DataBaseManager
from ValidationManager import ValidationManager
from LogManager import LogManager
from util import *
if __name__ == "__main__":
    print_error("Error: This script is not for directly using.")
    print_error("Error: Import this file in python console.")
    exit()

projectOpened = False
dm = None   # Directory Manager
vm = None   # Validation Manager
dbm = None  # Database Manager
lm = None   # Log Manager


def init(pd, ref, val):
    global projectOpened, dm, dbm, vm, lm
    if projectOpened:
        print_green("Warning: project had been opened. Close current project now")
        close()

    dm = DirectoryManager(pd)
    lm = LogManager(dm)
    dbm = DataBaseManager(dm, lm)
    vm = ValidationManager(dm, lm, dbm)
    projectOpened = True

    dbm.load_reference(ref)
    dbm.load_internal_validation(val)


def close():
    global projectOpened, dm
    dm.remove_all_temp_folder()
    dm = None
    _dbm = None
    _vm = None
    projectOpened = False


def validate():
    pass


def loop(init_func, loop_func, condition_func):
    init_func()
    while condition_func():
        loop_func()
