from src.DirectoryManager import DirectoryManager
from src.DataBaseManager import DataBaseManager
from src.ValidationManager import ValidationManager, Judge
from src.LogManager import LogManager
from random import shuffle
from math import ceil
from src.util import *
import src.v0324 as v0324
if __name__ == "__main__":
    print_error("Error: This script is not for directly using.")
    print_error("Error: Import this file in python console.")
    exit()

projectOpened = False
dm = None   # Directory Manager
vm = None   # Validation Manager
dbm = None  # Database Manager
lm = None   # Log Manager


def init(pd, ref=None, val=None):
    global projectOpened, dm, dbm, vm, lm
    if projectOpened:
        print_green("Warning: project had been opened. Close current project now")
        close()

    dm = DirectoryManager(pd)
    lm = LogManager(dm)
    dbm = DataBaseManager(dm, lm)
    vm = ValidationManager(dm, lm, dbm)
    projectOpened = True

    if ref is not None:
        dbm.load_reference(ref)
    if val is not None:
        dbm.load_internal_validation(val)


def init_fasta(pd, ref=None, val=None):
    global projectOpened, dm, dbm, vm, lm
    if projectOpened:
        print_green("Warning: project had been opened. Close current project now")
        close()

    dm = DirectoryManager(pd)
    lm = LogManager(dm)
    dbm = DataBaseManager(dm, lm)
    vm = ValidationManager(dm, lm, dbm)
    projectOpened = True

    if ref is not None:
        dbm.load_reference_fasta(ref)
    if val is not None:
        dbm.load_internal_validation_fasta(val)


def close():
    global projectOpened, dm
    dm.remove_all_temp_folder()
    dm = None
    _dbm = None
    _vm = None
    projectOpened = False


def validate():
    pass


def loop(init_func, loop_func, condition_func):
    init_func()
    while condition_func():
        loop_func()


def random_ref_val(ratio=0.95):
    temp = dbm.ref_db + dbm.int_val_db
    shuffle(temp)
    dbm.ref_db = temp[0:int(ceil(len(temp) * ratio))]
    dbm.int_val_db = temp[int(ceil(len(temp) * ratio)):]
