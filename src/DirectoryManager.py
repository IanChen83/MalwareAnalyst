from src.util import *
import os


class Phony:
    def __init__(self):
        pass


class DirectoryManager:
    def __init__(self, pd):
        self.temp_dir = Phony()
        self.project_dir = pd

        # Set temp folder
        project_temp = self.mkdir("temp")

        for t in os.listdir(project_temp):
            setattr(self.temp_dir, t, os.path.join(self.project_dir, "temp", t))
        print_green("DirectoryManager: temp directory created in {}".format(project_temp))

        # Set validation folder
        self.validation_dir = self.mkdir("validation")

    def mkdir(self, name):
        dir_name = os.path.join(self.project_dir, name)
        if os.path.isdir(dir_name):
            print_green("Warning: {0} dir already exists.".format(dir_name))
        else:
            os.system("mkdir -p {}".format(dir_name))
        return dir_name
    '''
    #################### Temp Folder ######################
    '''
    def add_temp_folder(self, folder_name):
        temp_dir = os.path.join(self.project_dir, "temp", folder_name)
        if hasattr(self.temp_dir, folder_name):
            print_error("Error: temp folder '{0}' exists on creating".format(folder_name))
        setattr(self.temp_dir, folder_name, temp_dir)
        os.mkdir(temp_dir)
        print_green("DirectoryManager: temp folder '{0}' created".format(getattr(self.temp_dir, folder_name)))
        return getattr(self.temp_dir, folder_name)

    def remove_temp_folder(self, folder_name):
        if hasattr(self.temp_dir, folder_name):
            os.system("rm -rf {}".format(getattr(self.temp_dir, folder_name)))
            delattr(self.temp_dir, folder_name)

    def remove_all_temp_folder(self):
        for t in os.listdir(os.path.join(self.project_dir, "temp")):
            self.remove_temp_folder(t)

